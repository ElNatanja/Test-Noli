local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local R6PartNames = {
\t["Head"] = true, ["Torso"] = true, ["Left Arm"] = true,
\t["Right Arm"] = true, ["Left Leg"] = true,
\t["Right Leg"] = true, ["HumanoidRootPart"] = true
}

local meshAttachmentMap = {
\t["NoliHead"] = "Head", ["NoliLeft Arm"] = "Left Arm",
\t["NoliLeft Leg"] = "Left Leg", ["NoliLower Skull"] = "Head",
\t["NoliRight Arm"] = "Right Arm", ["NoliRight Leg"] = "Right Leg",
\t["NoliTorso"] = "Torso", ["Voidstar"] = "Right Arm",
\t["VoidstarCrown"] = "Head"
}

local headOffsets = {
\t["NoliLower Skull"] = CFrame.new(0, -0.25, 0),
\t["VoidstarCrown"] = CFrame.new(0, 1.05, 0),
\t["NoliHead"] = CFrame.new(0.3, 0, 0),
\t["Voidstar"] = CFrame.new(-0.8, -1.5, -0.5)
}

local voidstarMotor, voidstarOriginal, voidstarCopy, voidstarThrown = nil, nil, nil, nil
local soundId = "rbxassetid://99558901806521"

local function weldAccessory(partToAttach, accessory)
\tif accessory.Name == "Voidstar" then
\t\tlocal motor = Instance.new("Motor6D")
\t\tmotor.Name = "VoidstarMotor6D"
\t\tmotor.Part0 = partToAttach
\t\tmotor.Part1 = accessory
\t\tmotor.C0 = headOffsets[accessory.Name] or CFrame.new()
\t\tmotor.C1 = CFrame.new()
\t\tmotor.Parent = partToAttach
\t\tvoidstarMotor = motor
\t\taccessory.Anchored = false
\t\taccessory.CanCollide = false
\t\taccessory.Parent = character
\t\tvoidstarOriginal = accessory
\telse
\t\tlocal weld = Instance.new("Weld")
\t\tweld.Part0 = partToAttach
\t\tweld.Part1 = accessory
\t\tweld.C0 = headOffsets[accessory.Name] or CFrame.new()
\t\tweld.Parent = accessory
\t\taccessory.Anchored = false
\t\taccessory.CanCollide = false
\t\taccessory.Parent = character
\tend
end

local function attachToCharacter(character, accessory)
\tlocal attachName = meshAttachmentMap[accessory.Name]
\tif not attachName then return end
\tlocal targetPart = character:FindFirstChild(attachName)
\tif not targetPart then return end
\tweldAccessory(targetPart, accessory)
end

local function main()
\tlocal assets = ReplicatedStorage:WaitForChild("Assets")
\tlocal killers = assets:WaitForChild("Killers")
\tlocal noliFolder = killers:WaitForChild("#NoliRework")
\tlocal rig = noliFolder:WaitForChild("Rig2")

\tif not character or not character.Parent then
\t\tcharacter = player.CharacterAdded:Wait()
\tend

\tfor _, part in ipairs(character:GetChildren()) do
\t\tif part:IsA("BasePart") and R6PartNames[part.Name] then
\t\t\tpart.Transparency = 1
\t\t\tpart.CanCollide = false
\t\tend
\tend

\tfor _, descendant in ipairs(rig:GetDescendants()) do
\t\tif descendant:IsA("MeshPart") and meshAttachmentMap[descendant.Name] then
\t\t\tlocal clone = descendant:Clone()
\t\t\tattachToCharacter(character, clone)
\t\t\tclone.Transparency = 0
\t\t\tclone.CanCollide = false
\t\tend
\tend

\tlocal rightArm = rig:FindFirstChild("Right Arm")
\tif rightArm then
\t\tfor _, obj in ipairs(rightArm:GetChildren()) do
\t\t\tif (obj:IsA("BasePart") or obj:IsA("MeshPart")) and obj.Name ~= "NoliRight Arm" then
\t\t\t\tlocal clone = obj:Clone()
\t\t\t\tlocal weld = Instance.new("Weld")
\t\t\t\tweld.Part0 = character:FindFirstChild("Right Arm")
\t\t\t\tweld.Part1 = clone
\t\t\t\tweld.C0 = (clone.Name == "TentacleBase") and CFrame.new(0, -1, 0) or CFrame.new()
\t\t\t\tweld.Parent = clone
\t\t\t\tclone.Anchored = false
\t\t\t\tclone.CanCollide = false
\t\t\t\tclone.Parent = character
\t\t\tend
\t\tend
\tend

\tlocal hrp = rig:FindFirstChild("HumanoidRootPart")
\tif hrp then
\t\tlocal shadowPuddle = hrp:FindFirstChild("ShadowPuddle")
\t\tif shadowPuddle and shadowPuddle:IsA("Attachment") then
\t\t\tlocal hrpPlayer = character:FindFirstChild("HumanoidRootPart")
\t\t\tif hrpPlayer then
\t\t\t\tshadowPuddle:Clone().Parent = hrpPlayer
\t\t\tend
\t\tend
\tend
end

main()
