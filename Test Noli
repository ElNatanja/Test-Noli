-- VOIDSTAR SCRIPT COMPLETO

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local R6PartNames = {
	["Head"] = true, ["Torso"] = true, ["Left Arm"] = true,
	["Right Arm"] = true, ["Left Leg"] = true,
	["Right Leg"] = true, ["HumanoidRootPart"] = true
}

local meshAttachmentMap = {
	["NoliHead"] = "Head", ["NoliLeft Arm"] = "Left Arm",
	["NoliLeft Leg"] = "Left Leg", ["NoliLower Skull"] = "Head",
	["NoliRight Arm"] = "Right Arm", ["NoliRight Leg"] = "Right Leg",
	["NoliTorso"] = "Torso", ["Voidstar"] = "Right Arm",
	["VoidstarCrown"] = "Head"
}

local headOffsets = {
	["NoliLower Skull"] = CFrame.new(0, -0.25, 0),
	["VoidstarCrown"] = CFrame.new(0, 1.05, 0),
	["NoliHead"] = CFrame.new(0.3, 0, 0),
	["Voidstar"] = CFrame.new(-0.8, -1.5, -0.5)
}

local voidstarMotor, voidstarOriginal, voidstarCopy, voidstarThrown = nil, nil, nil, nil
local soundId = "rbxassetid://99558901806521"

local function weldAccessory(partToAttach, accessory)
	if accessory.Name == "Voidstar" then
		local motor = Instance.new("Motor6D")
		motor.Name = "VoidstarMotor6D"
		motor.Part0 = partToAttach
		motor.Part1 = accessory
		motor.C0 = headOffsets[accessory.Name] or CFrame.new()
		motor.C1 = CFrame.new()
		motor.Parent = partToAttach
		voidstarMotor = motor
		accessory.Anchored = false
		accessory.CanCollide = false
		accessory.Parent = character
		voidstarOriginal = accessory
	else
		local weld = Instance.new("Weld")
		weld.Part0 = partToAttach
		weld.Part1 = accessory
		weld.C0 = headOffsets[accessory.Name] or CFrame.new()
		weld.Parent = accessory
		accessory.Anchored = false
		accessory.CanCollide = false
		accessory.Parent = character
	end
end

local function attachToCharacter(character, accessory)
	local attachName = meshAttachmentMap[accessory.Name]
	if not attachName then return end
	local targetPart = character:FindFirstChild(attachName)
	if not targetPart then return end
	weldAccessory(targetPart, accessory)
end

local function main()
	local assets = ReplicatedStorage:WaitForChild("Assets")
	local killers = assets:WaitForChild("Killers")
	local noliFolder = killers:WaitForChild("#NoliRework")
	local rig = noliFolder:WaitForChild("Rig2")

	if not character or not character.Parent then
		character = player.CharacterAdded:Wait()
	end

	for _, part in ipairs(character:GetChildren()) do
		if part:IsA("BasePart") and R6PartNames[part.Name] then
			part.Transparency = 1
			part.CanCollide = false
		end
	end

	for _, descendant in ipairs(rig:GetDescendants()) do
		if descendant:IsA("MeshPart") and meshAttachmentMap[descendant.Name] then
			local clone = descendant:Clone()
			attachToCharacter(character, clone)
			clone.Transparency = 0
			clone.CanCollide = false
		end
	end

	local rightArm = rig:FindFirstChild("Right Arm")
	if rightArm then
		for _, obj in ipairs(rightArm:GetChildren()) do
			if (obj:IsA("BasePart") or obj:IsA("MeshPart")) and obj.Name ~= "NoliRight Arm" then
				local clone = obj:Clone()
				local weld = Instance.new("Weld")
				weld.Part0 = character:FindFirstChild("Right Arm")
				weld.Part1 = clone
				weld.C0 = (clone.Name == "TentacleBase") and CFrame.new(0, -1, 0) or CFrame.new()
				weld.Parent = clone
				clone.Anchored = false
				clone.CanCollide = false
				clone.Parent = character
			end
		end
	end

	local hrp = rig:FindFirstChild("HumanoidRootPart")
	if hrp then
		local shadowPuddle = hrp:FindFirstChild("ShadowPuddle")
		if shadowPuddle and shadowPuddle:IsA("Attachment") then
			local hrpPlayer = character:FindFirstChild("HumanoidRootPart")
			if hrpPlayer then
				shadowPuddle:Clone().Parent = hrpPlayer
			end
		end
	end
end

main()
